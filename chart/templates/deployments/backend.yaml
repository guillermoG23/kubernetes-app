apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-springboot-backend
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
spec:
  selector:
    matchLabels:
      role: backend
      app: {{ .Values.app.name }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
  replicas: {{ .Values.app.backend.replicaCount }}
  template:
    metadata:
      labels:
        role: backend
        app: {{ .Values.app.name }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: init-springboot-backend
          image: {{ .Values.app.init.imageRepository}}:{{ .Values.app.init.imageTag }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ['sh', '-c', "until nslookup {{ .Release.Name }}-mysql-database; do echo waiting for database service; sleep 2; done"]
      containers:
        - name: springboot-backend
          image: {{ .Values.app.backend.imageRepository}}:{{ .Values.app.backend.imageTag }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.backend.internalPort }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.backend.internalPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.backend.internalPort }}
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.app.backend.resources | indent 12 }}
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mysql-database-user
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mysql-database-user
                  key: password
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://{{ .Release.Name }}-mysql-database:{{ .Values.service.database.internalPort }}/{{ .Values.database.mysql.dbName }}?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false