{{ if .Values.monitoring.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-filebeat
  namespace: {{ .Release.Namespace }}
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
    k8s-app: filebeat
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-filebeat
  namespace: {{ .Release.Namespace }}
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
    k8s-app: filebeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - watch
      - list
  - apiGroups: ["apps"]
    resources:
      - replicasets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources:
      - jobs
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-filebeat
  namespace: {{ .Release.Namespace }}
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
    k8s-app: filebeat
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs: ["get", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-filebeat-kubeadm-config
  namespace: {{ .Release.Namespace }}
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
    k8s-app: filebeat
rules:
  - apiGroups: [""]
    resources:
      - configmaps
    resourceNames:
      - kubeadm-config
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-filebeat
  namespace: {{ .Release.Namespace }}
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
    k8s-app: filebeat
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-filebeat
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-filebeat
  namespace: {{ .Release.Namespace }}
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
    k8s-app: filebeat
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-filebeat
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Release.Name }}-filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-filebeat-kubeadm-config
  namespace: {{ .Release.Namespace }}
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
    k8s-app: filebeat
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-filebeat
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Release.Name }}-filebeat-kubeadm-config
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-filebeat-config
  namespace: {{ .Release.Namespace }}
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.enabled: true
          hints.default_config:
            type: container
            paths:
              - /var/log/containers/*${data.kubernetes.container.id}.log
              
    processors:
      - add_cloud_metadata:
      - add_host_metadata:

    output.elasticsearch:
      hosts: ["${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}"]
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
      ssl.verification_mode: none

    setup.kibana:
      host: "${KIBANA_HOST:kibana}:${KIBANA_PORT:5601}"
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
      protocol: "https"
      ssl.enabled: true
      ssl.verification_mode: none

    setup.dashboards.enabled: true
    setup.dashboards.retry.enabled: true
    setup.dashboards.retry.interval: 2s
    setup.dashboards.retry.maximum: 0
    setup.template.enabled: true
    setup.ilm.enabled: true
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-filebeat
  namespace: {{ .Release.Namespace }}
  labels:
    release-name: {{ .Release.Name }}
    release-namespace: {{ .Release.Namespace }}
    environment: {{ .Values.environment }}
    app: {{ .Values.app.name }}
    k8s-app: filebeat
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      labels:
        release-name: {{ .Release.Name }}
        release-namespace: {{ .Release.Namespace }}
        environment: {{ .Values.environment }}
        app: {{ .Values.app.name }}
        k8s-app: filebeat
    spec:
      serviceAccountName: {{ .Release.Name }}-filebeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
        - name: init-filebeat
          image: curlimages/curl:{{ .Values.app.init.curl.imageTag }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ['sh', '-c', "until [ $response == '200' ]; do response=$(curl --write-out '%{http_code}' --silent --output /dev/null https://{{ .Release.Name}}-kibana-kb-http:5601/login -k); echo waiting for elastic - $response; sleep 5; done" ]
      containers:
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:{{ .Values.monitoring.elasticVersion }}
          args: ["-c", "/etc/filebeat.yml", "-e"]
          env:
            - name: ELASTICSEARCH_HOST
              value: https://{{ .Release.Name }}-elasticsearch-es-http
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: KIBANA_HOST
              value: https://{{ .Release.Name }}-kibana-kb-http
            - name: KIBANA_PORT
              value: "5601"
            - name: ELASTICSEARCH_USERNAME
              value: elastic
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-elasticsearch-es-elastic-user
                  key: elastic
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            runAsUser: 0
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config
              mountPath: /etc/filebeat.yml
              readOnly: true
              subPath: filebeat.yml
            - name: data
              mountPath: /usr/share/filebeat/data
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: varlog
              mountPath: /var/log
              readOnly: true
      volumes:
        - name: config
          configMap:
            defaultMode: 0640
            name: {{ .Release.Name }}-filebeat-config
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlog
          hostPath:
            path: /var/log
        - name: data
          hostPath:
            path: /var/lib/filebeat-data
            type: DirectoryOrCreate
{{ end }}